[tool.poetry]
name = "rai_framework"
version = "1.0.0"
description = "RAI is a framework for building general multi-agent systems, bringing Gen AI features to ROS enabled robots."
readme = "README.md"
authors = ["Maciej Majek <maciej.majek@robotec.ai>", "Bart≈Çomiej Boczek <bartlomiej.boczek@robotec.ai>"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10, <3.13"

rai_core = {path = "src/rai_core", develop = true}
rai_whoami = {path = "src/rai_whoami", develop = true}
pre-commit = "^3.7.0"
tabulate = "^0.9.0"
pytest = "^8.2.0"
pytest-timeout = "^2.3.1"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
pymdown-extensions = "*"
mkdocstrings-python = "*"
mkdocs-markdownextradata-plugin = "*"
mkdocs-callouts = "*"

[tool.poetry.group.s2s]
optional = true

[tool.poetry.group.s2s.dependencies]
rai_s2s = {path = "src/rai_s2s", develop = true, extras = ["all"]}

[tool.poetry.group.simbench]
optional = true

[tool.poetry.group.simbench.dependencies]
rai_sim = {path = "src/rai_sim", develop = true}
rai_bench = {path = "src/rai_bench", develop = true}

[tool.poetry.group.openset]
optional = true

[tool.poetry.group.openset.dependencies]
torch = "^2.3.1"
torchvision = "^0.18.1"
rf-groundingdino = "^0.2.0"
sam2 = { git = "https://github.com/RobotecAI/Grounded-SAM-2", branch = "main" }

[tool.poetry.group.nomad]
optional = true

[tool.poetry.group.nomad.dependencies]
visualnav_transformer = { git = "https://github.com/RobotecAI/visualnav-transformer-ros2.git", branch = "main" }
gdown = "^5.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
markers = [
    "billable: marks test as billable  (deselect with '-m \"not billable\"')",
    "ci_only: marks test as cli only (deselect with '-m \"not ci_only\"')",
]
addopts = "-m 'not billable and not ci_only' --ignore=src"
log_cli = true
log_cli_level = "INFO"
